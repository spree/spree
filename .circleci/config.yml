version: 2.1

defaults: &defaults
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/test-results
    CIRCLE_ARTIFACTS: /tmp/test-artifacts
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3
    BUNDLE_PATH: ~/spree/vendor/bundle
    DB_HOST: localhost
    DB: postgres # default value, this will speed up bundle install for all postgres builds
    DB_USERNAME: postgres
  working_directory: ~/spree
  docker:
    - image: &ruby_image cimg/ruby:3.3.0-browsers

commands:
  bundle_install:
    steps:
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}
      - install_libvips
      - run:
          name: Install global dependencies
          command: bundle check || bundle install
      - run:
          name: Install per-project gem dependencies
          command: bin/build-ci.rb install
  install_libvips:
    steps:
      - run:
          name: Install libvips
          command: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32EE5355A6BC6E42 && sudo apt-get update && sudo apt-get install libvips42
  store_all_artifacts:
    steps:
      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts
      - store_artifacts:
          path: /tmp/failed_tests
          destination: failed_tests
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - bundle_install
      - save_cache:
          key: spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}
          paths:
            - ~/spree/vendor/bundle
  test: &test
    <<: *defaults
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    steps: &default_steps
      - checkout
      - attach_workspace:
          at: /tmp
      - install_libvips
      - bundle_install
      - run:
          name: Run tests
          command: bin/build-ci.rb test
      - store_all_artifacts

  test_mysql: &test_mysql
    <<: *test
    docker:
      - image: *ruby_image
      - image: cimg/mysql:8.0
        command: [--default-authentication-plugin=mysql_native_password]
    environment: &mysql_environment
      <<: *environment
      DB: mysql
      DB_USERNAME: root

  # postgres tests
  test_core_postgres:
    <<: *test
    parallelism: 6
    environment:
      <<: *environment
      PROJECTS: core
  test_api_postgres:
    <<: *test
    parallelism: 4
    environment:
      <<: *environment
      PROJECTS: api
  test_admin_postgres:
    <<: *test
    environment:
      <<: *environment
      PROJECTS: admin
  test_storefront_postgres:
    <<: *test
    environment:
      <<: *environment
      PROJECTS: storefront
  test_other_postgres:
    <<: *test
    environment:
      <<: *environment
      PROJECTS: emails,sample

  # mysql tests
  test_core_mysql:
    <<: *test_mysql
    parallelism: 6
    environment:
      <<: *mysql_environment
      PROJECTS: core
  test_api_mysql:
    <<: *test_mysql
    parallelism: 4
    environment:
      <<: *mysql_environment
      PROJECTS: api
  test_admin_mysql:
    <<: *test_mysql
    environment:
      <<: *mysql_environment
      PROJECTS: admin
  test_storefront_mysql:
    <<: *test_mysql
    environment:
      <<: *mysql_environment
      PROJECTS: storefront
  test_other_mysql:
    <<: *test_mysql
    environment:
      <<: *mysql_environment
      PROJECTS: emails,sample
      
workflows:
  main:
    jobs:
      - build
      # postgres tests
      - test_core_postgres:
          requires:
            - build
      - test_api_postgres:
          requires:
            - build
      - test_admin_postgres:
          requires:
            - build
      - test_storefront_postgres:
          requires:
            - build
      - test_other_postgres:
          requires:
            - build

      # mysql tests
      - test_core_mysql:
          requires:
            - build
            - test_core_postgres
      - test_api_mysql:
          requires:
            - build
            - test_api_postgres
      - test_admin_mysql:
          requires:
            - build
            - test_admin_postgres
      - test_storefront_mysql:
          requires:
            - build
            - test_storefront_postgres
      - test_other_mysql:
          requires:
            - build
            - test_other_postgres