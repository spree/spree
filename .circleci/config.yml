version: 2.1

defaults: &defaults
  environment: &environment
    CIRCLE_TEST_REPORTS: /tmp/test-results
    CIRCLE_ARTIFACTS: /tmp/test-artifacts
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3
    BUNDLE_PATH: ~/spree/vendor/bundle
    DB: postgres # default value, this will speed up bundle install for all postgres builds
    DB_HOST: localhost
    DB_USERNAME: postgres
  working_directory: ~/spree
  docker:
    - image: &ruby_image cimg/ruby:3.3.0-browsers

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}
      - run:
          name: Install libvips
          command: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32EE5355A6BC6E42 && sudo apt-get update && sudo apt-get install libvips42
      - run:
          name: Install global dependencies
          command: bundle check || bundle install
      - run:
          name: Install per-project gem dependencies
          command: bin/build-ci.rb install
      - save_cache:
          key: spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}
          paths:
            - ~/spree/vendor/bundle

  run_test: &run_test
    <<: *defaults
    steps: &default_steps
      - checkout
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}-{{ .Branch }}
            - spree-bundle-v10-ruby-{{ checksum ".ruby-version" }}
      - run:
          name: Install libvips
          command: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 32EE5355A6BC6E42 && sudo apt-get update && sudo apt-get install libvips42
      - run:
          name: Ensure gems are installed
          command: bin/build-ci.rb install
      - run:
          name: Run tests
          command: bin/build-ci.rb test
      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts
      - store_artifacts:
          path: /tmp/failed_tests
          destination: failed_tests
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results

  tests_core: &tests_core
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    parallelism: 6
    environment:
      <<: *environment
      PROJECTS: core

  tests_api: &tests_api
    <<: *run_test
    parallelism: 4
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: api

  tests_admin: &tests_admin
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: admin

  tests_storefront: &tests_storefront
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: storefront

  tests_other: &tests_other
    <<: *run_test
    docker:
      - image: *ruby_image
      - image: cimg/postgres:16.2
        environment:
          POSTGRES_USER: postgres
    environment:
      <<: *environment
      PROJECTS: emails,sample

workflows:
  main:
    jobs:
      - build
      - tests_core:
          name: tests_rails_postgres_core
          requires:
            - build
      - tests_api:
          name: tests_rails_postgres_api
          requires:
            - build
      - tests_admin:
          name: tests_rails_postgres_admin
          requires:
            - build
      - tests_storefront:
          name: tests_rails_postgres_storefront
          requires:
            - build
      - tests_other:
          name: tests_rails_postgres_other
          requires:
            - build
